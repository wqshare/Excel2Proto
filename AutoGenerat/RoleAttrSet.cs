//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: RoleAttrSet.proto
namespace Excel2Proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RoleAttrSet")]
  public partial class RoleAttrSet : global::ProtoBuf.IExtensible
  {
    public RoleAttrSet() {}
    
    private int _Prof;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"Prof", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Prof
    {
      get { return _Prof; }
      set { _Prof = value; }
    }
    private int _Level;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"Level", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Level
    {
      get { return _Level; }
      set { _Level = value; }
    }
    private int _Hp;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"Hp", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Hp
    {
      get { return _Hp; }
      set { _Hp = value; }
    }
    private int _Attack;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"Attack", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Attack
    {
      get { return _Attack; }
      set { _Attack = value; }
    }
    private int _Defence;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"Defence", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Defence
    {
      get { return _Defence; }
      set { _Defence = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}