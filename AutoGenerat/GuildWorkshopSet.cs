//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: GuildWorkshopSet.proto
namespace Excel2Proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"GuildWorkshopSet")]
  public partial class GuildWorkshopSet : global::ProtoBuf.IExtensible
  {
    public GuildWorkshopSet() {}
    
    private int _ID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"ID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int ID
    {
      get { return _ID; }
      set { _ID = value; }
    }
    private int _WorkshopLv;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"WorkshopLv", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int WorkshopLv
    {
      get { return _WorkshopLv; }
      set { _WorkshopLv = value; }
    }
    private int _SkillCount;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"SkillCount", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int SkillCount
    {
      get { return _SkillCount; }
      set { _SkillCount = value; }
    }
    private int _SkillLvLimit;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"SkillLvLimit", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int SkillLvLimit
    {
      get { return _SkillLvLimit; }
      set { _SkillLvLimit = value; }
    }
    private int _DonateForUp;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"DonateForUp", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int DonateForUp
    {
      get { return _DonateForUp; }
      set { _DonateForUp = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}