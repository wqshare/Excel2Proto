//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: LevelGiftConfigSet.proto
namespace Excel2Proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LevelGiftConfigSet")]
  public partial class LevelGiftConfigSet : global::ProtoBuf.IExtensible
  {
    public LevelGiftConfigSet() {}
    
    private int _ID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"ID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int ID
    {
      get { return _ID; }
      set { _ID = value; }
    }
    private int _Min;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"Min", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Min
    {
      get { return _Min; }
      set { _Min = value; }
    }
    private int _Max;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"Max", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Max
    {
      get { return _Max; }
      set { _Max = value; }
    }
    private float _SlowDown;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"SlowDown", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float SlowDown
    {
      get { return _SlowDown; }
      set { _SlowDown = value; }
    }
    private int _MinusValus;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"MinusValus", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int MinusValus
    {
      get { return _MinusValus; }
      set { _MinusValus = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}